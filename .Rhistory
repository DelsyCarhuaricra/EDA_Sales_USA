a <- round(a, 3)
a
a <- 0.2
a <- function(a) ifelse(a<1,1,a)
a
new.function <- function(a) ifelse(a<1,1,a)
a <- 0.2
new.function <- function(a) ifelse(a<1,1,a)
new.function(a)
a <- c(0.2,2)
new.function <- function(a) ifelse(a<1,1,a)
new.function(a)
aesypay_usaSales <- new.function(easypay_usaSales)
easypay_usaSales <- new.function(easypay_usaSales)
summary(easypay_usaSales)
fit_gamma  <- fitdist(easypay_usaSales, "gamma")
fit_gamma  <- fitdist(easypay_usaSales/10000, "gamma")
summary(fit_gamma)
fit_gamma  <- fitdist(easypay_usaSales/1000, "gamma")
summary(fit_gamma)
fit_lognormal <- fitdist(easypay_usaSales, "lnorm")
summary(fit_lognormal)
fit_weillbul <- fitdist(easypay_usaSales, "weibull")
summary(fit_weillbul)
fit_lognormal <- fitdist(easypay_usaSales/1000, "lnorm")
summary(fit_lognormal)
descdist(easypay_usaSales, boot=1000)
estimacion_total <- rlnorm(360, meanlog = 1.000000e+00, sdlog = -9.250091e-11 )
summary(estimacion_total)
knitr::opts_chunk$set(echo = TRUE)
#AQUI SE INCLUYEN LIS PAQUETES A INSTALAR PARA QUE FUNCIONE EL RMD
ifelse(require(MASS)==T, "Cargado", install.packages("readxl"))
ifelse(require(MASS)==T, "Cargado", install.packages("MASS"))
ifelse(require(viridis)==T, "Cargado", install.packages("viridis"))
ifelse(require(tables)==T, "Cargado", install.packages("tables"))
ifelse(require(Hmisc)==T, "Cargado", install.packages("Hmisc"))
ifelse(require(flextable)==T, "Cargado", install.packages("flextable"))
ifelse(require(dplyr)==T, "Cargado", install.packages("dplyr"))
ifelse(require(RcmdrMisc)==T, "Cargado", install.packages("RcmdrMisc"))
ifelse(require(webr)==T, "Cargado", install.packages("webr"))
ifelse(require(knitr)==T, "Cargado", install.packages("knitr"))
ifelse(require(kableExtra)==T, "Cargado", install.packages("kableExtra"))
ifelse(require(dataMaid)==T, "Cargado", install.packages("dataMaid"))
ifelse(require(tidylog)==T, "Cargado", install.packages("tidylog"))
ifelse(require(stargazer)==T, "Cargado", install.packages("stargazer"))
ifelse(require(summarytools)==T, "Cargado", install.packages("summarytools"))
ifelse(require(metan)==T, "Cargado", install.packages("metan"))
ifelse(require(DT)==T, "Cargado", install.packages("DT"))
ifelse(require(expss)==T, "Cargado", install.packages("expss"))
ifelse(require(corrplot)==T, "Cargado", install.packages("corrplot"))
#install.packages("descr")
#install.packages("summarytools")
#install.packages("rriskDistributions")
#AQUI SE INCLUYEN LAS LIBRERIAS
library(MASS)
library(viridis)
library(tables)
library(Hmisc)
library(kableExtra)
library(knitr,stargazer)
library(dataMaid,tidylog)
library(reporttools)
library(dplyr, warn.conflicts = FALSE)
library(reporttools,summarytools)
library(metan,dplyr , warn.conflicts = FALSE)
library(flextable, DT)
library(dplyr)
library(RcmdrMisc)
library(webr,expss)
library(descr)
library(summarytools)
library(fitdistrplus)
library(survival)
library(npsurv)
library(lsei)
library(readr)
library(rriskDistributions)
library(xts)
library(zoo)
library(tidyverse)
library(lubridate)
library(tseries)
library(astsa)
library(forecast)
library(foreign)
library(timsac)
library(vars)
library(mFilter)
library(dynlm)
library(MASS)
library(ggfortify)
library(readxl)
library(corrplot)
usaStore <- read.csv("D:/EAE Master Big Data/Estadistica/TrabajoFinal/sales.csv", header = TRUE, sep = ";")
str(usaStore)
summary(usaStore)
summary(usaStore$order_id)
usaStore$order_id <- is.integer(usaStore$order_id)
summary(usaStore$order_id)
usaStore <- read.csv("D:/EAE Master Big Data/Estadistica/TrabajoFinal/sales.csv", header = TRUE, sep = ";")
str(usaStore)
summary(usaStore$order_id)
usaStore$order_id <- as.integer(usaStore$order_id)
summary(usaStore$order_id)
usaStore <- usaStore[!is.na(usaStore$order_id),]
summary(usaStore$order_id)
summary(usaStore$order_id)
summary(usaStore$order_date)
usaStore$order_date %>%  top_n(1)
usaStore$order_date
ejemplo1 <- "8/10/2020"
usaStore$order_date <- as.POSIXct(ejemplo1,tz= Sys.timezone())
usaStore$order_date
usaStore <- read.csv("D:/EAE Master Big Data/Estadistica/TrabajoFinal/sales.csv", header = TRUE, sep = ";")
str(usaStore)
usaStore$order_date<-as.Date(usaStore$order_date, "%d/%m/%Y")
summary(usaStore)
summary(usaStore$order_id)
usaStore$order_id <- as.integer(usaStore$order_id)
usaStore$order_date<-as.Date(usaStore$order_date, "%d/%m/%Y")
usaStore <- usaStore[!is.na(usaStore$order_id),]
summary(usaStore$order_date)
usaStore <- usaStore[!is.na(usaStore$order_date),]
usaStore$order_date %>% filter(usaStore$order_date == "")
summary(usaStore)
summary(usaStore$status)
usaStore <- usaStore[!is.na(usaStore$status),]
usaStore
usaStore
summary(usaStore)
usaStore[usaStore$status == "",]
usaStore[usaStore$status == "",]
usaStore <- read.csv("D:/EAE Master Big Data/Estadistica/TrabajoFinal/sales.csv", header = TRUE, sep = ";")
str(usaStore)
summary(usaStore)
summary(usaStore$item_id)
str(usaStore$item_id)
str(usaStore$item_id)
max(usaStore$item_id)
min(usaStore$item_id)
min(usaStore$sku)
(usaStore$sku)
summary(usaStore$sku)
usaStore[usaStore$sku=="",]
min(usaStore$sku)
usaStore[usaStore$sku=="jjp_15000006-100-NIL",]
usaStore[usaStore$sku==" jjp_15000006-100-NIL",]
usaStore[usaStore$sku=="",]
usaStore[usaStore$sku==" ",]
count(usaStore[usaStore$sku==" ",])
usaStore$cant_ordened
summary(usaStore$cant_ordened)
summary(usaStore$price)
usaStore$price <-  function(x) ifelse(usaStore$price<1,1,usaStore$price)
usaStore$price <- funcion_redondeo_uno(usaStore$price)
funcion_redondeo_uno <-  function(valor) ifelse(valor<1,1,valor)
usaStore$price <- funcion_redondeo_uno(usaStore$price)
summary(usaStore$price)
summary(usaStore$value)
usaStore$value <- funcion_redondeo_uno(usaStore$value)
summary(usaStore$value)
summary(usaStore$discount_amount)
summary(usaStore$total)
usaStore$total <- funcion_redondeo_uno(usaStore$total)
summary(usaStore$total)
summary(usaStore$cust_id)
summary(usaStore$year)
summary(usaStore$month)
summary(usaStore$month)
L01 < - "D:/EAE Master Big Data/Estadistica/TrabajoFinal"
L01 < - "D:\EAE Master Big Data\Estadistica\TrabajoFinal"
L01 < - "D:/EAE Master Big Data/Estadistica/TrabajoFinal/"
L01 <- "D:/EAE Master Big Data/Estadistica/TrabajoFinal/"
usaStore <- read.csv(paste(L01,"sales.csv",sep=""), header = TRUE, sep = ";")
#funcion limpiar
funcion_redondeo_uno <-  function(valor) ifelse(valor<1,1,valor) # Metodo para realizar el redondeo
summary(usaStore)
#Funciones para
# Para order_id convertir a enteros
usaStore$order_id <- as.integer(usaStore$order_id)
# Para order_date Convertir a fecha
usaStore$order_date<-as.Date(usaStore$order_date, "%d/%m/%Y")
#Para convertir convertir precio 0.0 a 1
usaStore$price <- funcion_redondeo_uno(usaStore$price)
#Convertir value de 0.0 a 1
usaStore$value <- funcion_redondeo_uno(usaStore$value)
#Importante mencionar que la variable discount_amount no se le quitarÃ¡ el 0 porque es permisible
#Convertir value de 0.0 a 1
usaStore$total <- funcion_redondeo_uno(usaStore$total)
# Limpiar los NA's
usaStore <- usaStore[!is.na(usaStore$order_id),]
usaStore <- usaStore[!is.na(usaStore$order_date),]
usaStore <- usaStore[!is.na(usaStore$status),]
usaStore <- usaStore[!is.na(usaStore$sku),]
usaStore <- usaStore[!is.na(usaStore$cant_ordened),]
usaStore <- usaStore[!is.na(usaStore$total),]
#Para guardar la data limpia
write.csv(cvd, paste(Destino,"sales.csv",sep = ""))
#Para guardar la data limpia
write.csv(usaStore, paste(Destino,"sales.csv",sep = ""))
Destino <- "D:/EAE Master Big Data/Estadistica/TrabajoFinal/csvlimpio/"
#Para guardar la data limpia
write.csv(usaStore, paste(Destino,"sales.csv",sep = ""))
knitr::opts_chunk$set(echo = TRUE)
summary(usaStore$month)
unique(usaStore$month)
funcion_reemplazar_cadena_2021 <- function(valor) replace(valor,"2021","21")
funcion_reemplazar_cadena_2021(usaStore$month)
summary(funcion_reemplazar_cadena_2021(usaStore$month))
unique(funcion_reemplazar_cadena_2021(usaStore$month))
unique(usaStore$month)
funcion_minusculas <- function(valor) tolower(valor)
unique(funcion_minusculas(usaStore$month))
library(grepl)
ifelse(require(grepl)==T, "Cargado", install.packages("grepl"))
library(corrplot)<
library(grepl)
unique(length(usaStore$month))
prueba <- "holamundo"
length(prueba)
nchar(prueba)
unique(usaStore$month)
funcion_modificar_mes <- function(valor) ifelse(nchar(valor)>7,substr(valor,5,6)<-"",valor)
unique(funcion_modificar_mes(usaStore$month))
unique(usaStore$month)
prueba <- "  holamun do"
gsub(" ","",prueba)
prueba
gsub(" ","",prueba)
usaStore$month <- gsub(" ","",usaStore$month)
usaStore$month
unique(funcion_modificar_mes(usaStore$month))
count(unique(usaStore$month))
count.fields(unique(funcion_modificar_mes(usaStore$month)))
usaStore$month <- gsub(" ","",usaStore$month)
usaStore$month
funcion_modificar_mes <- function(valor) ifelse(nchar(valor)>6,substr(valor,5,6)<-"",valor)
funcion_modificar_mes(usaStore$month)
usaStore$month
unique(nchar(usaStore$month))
funcion_modificar_mes <- function(valor) ifelse(nchar(valor)==8,substr(valor,5,6)<-"",valor)
usaStore$month <- gsub(" ","",usaStore$month)
unique(funcion_modificar_mes(usaStore$month))
funcion_modificar_mes(usaStore$month)
unique(nchar(usaStore$month))
funcion_modificar_mes <- function(valor) ifelse(nchar(valor)==8,substr(valor,5,6)<-"a",valor)
funcion_modificar_mes(usaStore$month)
funcion_modificar_mes <- function(valor) ifelse(nchar(valor)==8,substring(valor,5,6)<-"a",valor)
funcion_modificar_mes(usaStore$month)
funcion_modificar_mes <- function(valor){
if(nchar(valor)==8){
valor<- substr(valor,5,6)<-""
}else{
valor
}
return(valor)
}
usaStore$month
funcion_modificar_mes(usaStore$month)
funcion_modificar_mes <- function(valor){
if(nchar(valor==8)){
valor<- substr(valor,5,6)<-""
}else{
valor
}
return(valor)
}
funcion_modificar_mes(usaStore$month)
funcion_modificar_mes <- function(valor){
if(nchar(valor==8)& nchar(valor)>1){
valor<- substr(valor,5,6)<-""
}else{
valor
}
return(valor)
}
funcion_modificar_mes(usaStore$month)
funcion_modificar_mes <- function(valor){
if(nchar(valor==8)& nchar(valor)>1){
valor<- substr(valor,5,6)<-""
}else{
valor
}
}
funcion_modificar_mes(usaStore$month)
funcion_modificar_mes <- function(valor){
if(nchar(valor==8)& nchar(valor)>1){
substr(valor,5,6)<-""
}else{
valor
}
}
funcion_modificar_mes(usaStore$month)
funcion_modificar_mes <- function(valor){
#ifelse(nchar(valor==8))
if(nchar(valor)==8){
valor <- substr(valor,5,6)<-""
}else{
valor
}
}
funcion_modificar_mes(usaStore$month)
funcion_modificar_mes <- function(valor){
ifelse(nchar(valor)==8,substr(valor,5,6)<-"",valor)
}
funcion_modificar_mes(usaStore$month)
funcion_modificar_mes <- function(valor){
ifelse(nchar(valor)==8,
paste(substr(valor,1,4),substr(valor,6,8))
,valor)
}
funcion_modificar_mes(usaStore$month)
funcion_modificar_mes <- function(valor){
ifelse(nchar(valor)==8,
paste(substr(valor,1,4),substr(valor,7,8))
,valor)
}
funcion_modificar_mes(usaStore$month)
funcion_modificar_mes <- function(valor){
ifelse(nchar(valor)==8,
paste(substr(valor,1,4),substr(valor,7,8),sep = "")
,valor)
}
funcion_modificar_mes(usaStore$month)
unique(usaStore$ref_num)
summary(usaStore$ref_num)
unique(usaStore$Name.Prefix)
unique(usaStore$First.Name)
unique(usaStore$Middle.Initial)
unique(usaStore$Last.Name)
summary(usaStore$Last.Name)
summary(usaStore$Gender)
summary(usaStore$age)
usaStore$age <- as.integer(usaStore$age)
summary(usaStore$age)
typeof(usaStore$age)
usaStore$Customer.Since<-as.Date(usaStore$Customer.Since, "%d/%m/%Y")
usaStore$Customer.Since
#No olvidarse de eliminar las filas nulas desde el excel para que la limpieza estÃ© completa
L01 <- "D:/EAE Master Big Data/Estadistica/TrabajoFinal/"
Destino <- "D:/EAE Master Big Data/Estadistica/TrabajoFinal/csvlimpio/"
usaStore <- read.csv(paste(L01,"sales.csv",sep=""), header = TRUE, sep = ";")
# Para order_id convertir a enteros
usaStore$order_id <- as.integer(usaStore$order_id)
# Para order_date Convertir a fecha
usaStore$order_date<-as.Date(usaStore$order_date, "%d/%m/%Y")
#Para convertir convertir precio 0.0 a 1
usaStore$price <- funcion_redondeo_uno(usaStore$price)
#Convertir value de 0.0 a 1
usaStore$value <- funcion_redondeo_uno(usaStore$value)
#Importante mencionar que la variable discount_amount no se le quitarÃ¡ el 0 porque es permisible
#Convertir value de 0.0 a 1
usaStore$total <- funcion_redondeo_uno(usaStore$total)
#Para transformar mes
#1.- Transformando cadena a minusculas
usaStore$month <- funcion_minusculas(usaStore$month)
#2.- Homologando campo mes
usaStore$month <- funcion_modificar_mes(usaStore$month)
#Para transformar edad
usaStore$age <- as.integer(usaStore$age)
#Para transformar CustomerSince
#usaStore$Customer.Since<-as.Date(usaStore$Customer.Since, "%d/%m/%Y")
# Limpiar los NA's
usaStore <- usaStore[!is.na(usaStore$order_id),]
usaStore <- usaStore[!is.na(usaStore$order_date),]
usaStore <- usaStore[!is.na(usaStore$status),]
usaStore <- usaStore[!is.na(usaStore$sku),]
usaStore <- usaStore[!is.na(usaStore$cant_ordened),]
usaStore <- usaStore[!is.na(usaStore$total),]
usaStore <- usaStore[!is.na(usaStore$category),]
usaStore <- usaStore[!is.na(usaStore$payment_method),]
usaStore <- usaStore[!is.na(usaStore$bi_st),]
usaStore <- usaStore[!is.na(usaStore$cust_id),]
usaStore <- usaStore[!is.na(usaStore$year),]
usaStore <- usaStore[!is.na(usaStore$month),]
usaStore <- usaStore[!is.na(usaStore$ref_num),]
usaStore <- usaStore[!is.na(usaStore$Name.Prefix),]
usaStore <- usaStore[!is.na(usaStore$First.Name),]
usaStore <- usaStore[!is.na(usaStore$Middle.Initial),]
usaStore <- usaStore[!is.na(usaStore$Last.Name),]
usaStore <- usaStore[!is.na(usaStore$Gender),]
usaStore <- usaStore[!is.na(usaStore$full_name),]
typeof(usaStore$Customer.Since)
as.Date(usaStore$Customer.Since, "%m/%d/%Y")
summary(as.Date(usaStore$Customer.Since, "%m/%d/%Y") )
usaStore$Customer.Since <- as.Date(usaStore$Customer.Since, "%m/%d/%Y")
summary(usaStore$Customer.Since)
summary(usaStore$Region)
unique(usaStore$Region)
unique(usaStore$User.Name)
unique(usaStore$state)
unique(usaStore$State)
unique(usaStore$City)
unique(usaStore$County)
#No olvidarse de eliminar las filas nulas desde el excel para que la limpieza estÃ© completa
L01 <- "D:/EAE Master Big Data/Estadistica/TrabajoFinal/"
Destino <- "D:/EAE Master Big Data/Estadistica/TrabajoFinal/csvlimpio/"
usaStore <- read.csv(paste(L01,"sales.csv",sep=""), header = TRUE, sep = ";")
#funcion limpiar
funcion_redondeo_uno <-  function(valor) ifelse(valor<1,1,valor) # Metodo para realizar el redondeo
#funcion para reemplazar valores en una cadena
funcion_reemplazar_cadena_2021 <- function(valor) replace(valor,"2021","21")
#funcion para llevar todo a minusculas
funcion_minusculas <- function(valor) tolower(valor)
#funcion para homologar campo mes
funcion_modificar_mes <- function(valor){
ifelse(nchar(valor)==8,
paste(substr(valor,1,4),substr(valor,7,8),sep = "")
,valor)
}
# Para order_id convertir a enteros
usaStore$order_id <- as.integer(usaStore$order_id)
# Para order_date Convertir a fecha
usaStore$order_date<-as.Date(usaStore$order_date, "%d/%m/%Y")
#Para convertir convertir precio 0.0 a 1
usaStore$price <- funcion_redondeo_uno(usaStore$price)
#Convertir value de 0.0 a 1
usaStore$value <- funcion_redondeo_uno(usaStore$value)
#Importante mencionar que la variable discount_amount no se le quitarÃ¡ el 0 porque es permisible
#Convertir value de 0.0 a 1
usaStore$total <- funcion_redondeo_uno(usaStore$total)
#Para transformar mes
#1.- Transformando cadena a minusculas
usaStore$month <- funcion_minusculas(usaStore$month)
#2.- Homologando campo mes
usaStore$month <- funcion_modificar_mes(usaStore$month)
#Para transformar edad
usaStore$age <- as.integer(usaStore$age)
#Para transformar CustomerSince
usaStore$Customer.Since <- as.Date(usaStore$Customer.Since, "%m/%d/%Y")
# Limpiar los NA's
usaStore <- usaStore[!is.na(usaStore$order_id),]
usaStore <- usaStore[!is.na(usaStore$order_date),]
usaStore <- usaStore[!is.na(usaStore$status),]
usaStore <- usaStore[!is.na(usaStore$sku),]
usaStore <- usaStore[!is.na(usaStore$cant_ordened),]
usaStore <- usaStore[!is.na(usaStore$total),]
usaStore <- usaStore[!is.na(usaStore$category),]
usaStore <- usaStore[!is.na(usaStore$payment_method),]
usaStore <- usaStore[!is.na(usaStore$bi_st),]
usaStore <- usaStore[!is.na(usaStore$cust_id),]
usaStore <- usaStore[!is.na(usaStore$year),]
usaStore <- usaStore[!is.na(usaStore$month),]
usaStore <- usaStore[!is.na(usaStore$ref_num),]
usaStore <- usaStore[!is.na(usaStore$Name.Prefix),]
usaStore <- usaStore[!is.na(usaStore$First.Name),]
usaStore <- usaStore[!is.na(usaStore$Middle.Initial),]
usaStore <- usaStore[!is.na(usaStore$Last.Name),]
usaStore <- usaStore[!is.na(usaStore$Gender),]
usaStore <- usaStore[!is.na(usaStore$full_name),]
usaStore <- usaStore[!is.na(usaStore$SSN),]
usaStore <- usaStore[!is.na(usaStore$Phone.No.),]
usaStore <- usaStore[!is.na(usaStore$Place.Name),]
usaStore <- usaStore[!is.na(usaStore$SSN),]
usaStore <- usaStore[!is.na(usaStore$County),]
usaStore <- usaStore[!is.na(usaStore$City),]
usaStore <- usaStore[!is.na(usaStore$State),]
usaStore <- usaStore[!is.na(usaStore$Zip),]
usaStore <- usaStore[!is.na(usaStore$Region),]
usaStore <- usaStore[!is.na(usaStore$User.Name),]
usaStore <- usaStore[!is.na(usaStore$User.Name),]
usaStore <- usaStore[!is.na(usaStore$Region),]
usaStore <- usaStore[!is.na(usaStore$order_id),]
usaStore <- usaStore[!is.na(usaStore$order_date),]
usaStore <- usaStore[!is.na(usaStore$status),]
usaStore <- usaStore[!is.na(usaStore$sku),]
usaStore <- usaStore[!is.na(usaStore$cant_ordened),]
usaStore <- usaStore[!is.na(usaStore$total),]
usaStore <- usaStore[!is.na(usaStore$category),]
usaStore <- usaStore[!is.na(usaStore$payment_method),]
usaStore <- usaStore[!is.na(usaStore$bi_st),]
usaStore <- usaStore[!is.na(usaStore$cust_id),]
usaStore <- usaStore[!is.na(usaStore$year),]
usaStore <- usaStore[!is.na(usaStore$month),]
usaStore <- usaStore[!is.na(usaStore$ref_num),]
usaStore <- usaStore[!is.na(usaStore$Name.Prefix),]
usaStore <- usaStore[!is.na(usaStore$First.Name),]
usaStore <- usaStore[!is.na(usaStore$Middle.Initial),]
usaStore <- usaStore[!is.na(usaStore$Last.Name),]
usaStore <- usaStore[!is.na(usaStore$Gender),]
usaStore <- usaStore[!is.na(usaStore$full_name),]
usaStore <- usaStore[!is.na(usaStore$SSN),]
usaStore <- usaStore[!is.na(usaStore$Phone.No.),]
usaStore <- usaStore[!is.na(usaStore$Place.Name),]
usaStore <- usaStore[!is.na(usaStore$County),]
usaStore <- usaStore[!is.na(usaStore$City),]
usaStore <- usaStore[!is.na(usaStore$State),]
usaStore <- usaStore[!is.na(usaStore$Zip),]
usaStore <- usaStore[!is.na(usaStore$Region),]
usaStore <- usaStore[!is.na(usaStore$User.Name),]
# Para order_id convertir a enteros
usaStore$order_id <- as.integer(usaStore$order_id)
# Para order_date Convertir a fecha
usaStore$order_date<-as.Date(usaStore$order_date, "%d/%m/%Y")
#Para convertir convertir precio 0.0 a 1
usaStore$price <- funcion_redondeo_uno(usaStore$price)
#Convertir value de 0.0 a 1
usaStore$value <- funcion_redondeo_uno(usaStore$value)
#Importante mencionar que la variable discount_amount no se le quitarÃ¡ el 0 porque es permisible
#Convertir value de 0.0 a 1
usaStore$total <- funcion_redondeo_uno(usaStore$total)
#Para transformar mes
#1.- Transformando cadena a minusculas
usaStore$month <- funcion_minusculas(usaStore$month)
#2.- Homologando campo mes
usaStore$month <- funcion_modificar_mes(usaStore$month)
#Para transformar edad
usaStore$age <- as.integer(usaStore$age)
#Para transformar CustomerSince
usaStore$Customer.Since <- as.Date(usaStore$Customer.Since, "%m/%d/%Y")
#Para guardar la data limpia
write.csv(usaStore, paste(Destino,"sales.csv",sep = ""))
