diag_cp<- diagramaCat_Venta[order(diagramaCat_Venta$x,decreasing = TRUE),]
barplot(diag_cp$x, main ="Ventas por Categoria de producto", names.arg=c("Mobiles & Tablets","Appliances","Entertainment","Others","Computing","Women's Fashion","Men's Fashion","Beauty & Grooming","Superstore","Home & Living","Health & Sports","Kids & Baby","Soghaat","School & Education","Books"), col=rainbow(11),space =1,las=3, xlab="",  ylab="ventas",cex.names=0.5)
Ventas_Status <- usaStore$status
Ventas_Status1 <-  aggregate(x=ventas_categoria$ventas, by=list(Ventas_Status),FUN = sum)
datatable(Ventas_Status1[order(Ventas_Status1$x,decreasing = TRUE),])
diag_Status<- Ventas_Status1[order(Ventas_Status1$x,decreasing = TRUE),]
barplot(diag_Status$x, main ="Ventas por Status", names.arg=c("canceled","complete","received","order_refunded","refund","cod","paid","closed","holded","pending","processing","payment_review","pending_paypal" ), col=rainbow(11),space =1,las=3, xlab="",  ylab="ventas",cex.names=0.5,cey.names=0.5)
Ventas_Status <- usaStore$status
Ventas_Status1 <-  aggregate(x=ventas_categoria$ventas, by=list(Ventas_Status),FUN = sum)
datatable(Ventas_Status1[order(Ventas_Status1$x,decreasing = TRUE),])
Ventas_Status <- usaStore$status
Ventas_Status1 <-  aggregate(x=ventas_categoria$ventas, by=list(Ventas_Status),FUN = sum)
datatable(Ventas_Status1[order(Ventas_Status1$x,decreasing = TRUE),])
diag_Status<- Ventas_Status1[order(Ventas_Status1$x,decreasing = TRUE),]
barplot(diag_Status$x, main ="Ventas por Status", names.arg=c("canceled","complete","received","order_refunded","refund","cod","paid","closed","holded","pending","processing","payment_review","pending_paypal" ), col=rainbow(11),space =1,las=3, xlab="",  ylab="ventas",cex.names=0.5)
diag_Status<- Ventas_Status1[order(Ventas_Status1$x,decreasing = TRUE),]
barplot(diag_Status$x, main ="Ventas por Status", names.arg=c("canceled","complete","received","order_refunded","refund","cod","paid","closed","holded","pending","processing","payment_review","pending_paypal" ), col=rainbow(11),space =1,las=3, xlab="",  ylab="ventas",cex.names=0.5)
diag_Status<- Ventas_Status1[order(Ventas_Status1$x,decreasing = TRUE),]
barplot(diag_Status$x, main ="Ventas por Status", names.arg=c("canceled","complete","received","order_refunded","refund","cod","paid","closed","holded","pending","processing","payment_review","pending_paypal" ), col=rainbow(11),space =1,las=3, xlab="",  ylab="ventas",cex.names=0.5)
Ventas_Status1 <-  aggregate(x=ventas_categoria$ventas, by=list(Ventas_Status),FUN = sum)
datatable(Ventas_Status1[order(Ventas_Status1$x,decreasing = TRUE),])
Ventas_Status <- usaStore$status
Ventas_Status1 <-  aggregate(x=ventas_categoria$ventas, by=list(Ventas_Status),FUN = sum)
datatable(Ventas_Status1[order(Ventas_Status1$x,decreasing = TRUE),])
diag_Status<- Ventas_Status1[order(Ventas_Status1$x,decreasing = TRUE),]
barplot(diag_Status$x, main ="Ventas por Status", names.arg=c("canceled","complete","received","order_refunded","refund","cod","paid","closed","holded","pending","processing","payment_review","pending_paypal" ), col=rainbow(11),space =1,las=3, xlab="",  ylab="ventas",cex.names=0.5)
barplot(diag_Status$x, main ="Ventas por Status", names.arg=c("canceled","complete","received","order_refunded","refund","cod","paid","closed","holded","pending","processing","payment_review","pending_paypal" ), col=rainbow(11),space =1,las=3, xlab="",  ylab="ventas",cex.names=0.5)
tipoPago<-aggregate(x=usaStore$total,by=list(usaStore$payment_method), FUN=sum)
datatable(tipoPago[order(tipoPago$x,decreasing = TRUE),])
diag_MedPag<- tipoPago[order(tipoPago$x,decreasing = TRUE),]
barplot(diag_MedPag$x, main ="Ventas por Medio de Pago", names.arg=c("Easypay","easypay_voucher","bankalfalah","Payaxis","cod","jazzvoucher","Easypay_MA","jazzwallet","customercredit","apg","mcblite","cashatdoorstep","financesettlement" ), col=rainbow(11),space =1,las=3, xlab="",  ylab="ventas",cex.names=0.5,cey.names=0.5)
barplot(diag_MedPag$x, main ="Ventas por Medio de Pago", names.arg=c("Easypay","easypay_voucher","bankalfalah","Payaxis","cod","jazzvoucher","Easypay_MA","jazzwallet","customercredit","apg","mcblite","cashatdoorstep","financesettlement" ), col=rainbow(11),space =1,las=3, xlab="",  ylab="ventas",cex.names=0.5,cey.names=0.5)
totalgen <-usaStore$Gender
Venta_genero<-aggregate(x=usaStore$total,by=list(usaStore$Gender), FUN=sum)
datatable(Venta_genero[order(Venta_genero$x,decreasing = TRUE),])
ventasGenero <- c(0.51,0.49)
etiquetasG <- c("Femenino", "Masculino")
pctg <- round(ventasGenero/sum(ventasGenero)*100)
etiquetasG <- paste(ventasGenero, pctg)
etiquetasG <- paste(ventasGenero,"%",sep="")
pie(ventasGenero,labels = ventasGenero,
col=rainbow(length(etiquetasG)),
main="Ventas por Genero")
legend("topright", c("Femenino", "Masculino"), cex = 0.9,
fill = rainbow(length(ventasGenero)))
totalgen <-usaStore$Gender
Venta_genero<-aggregate(x=usaStore$total,by=list(usaStore$Gender), FUN=sum)
datatable(Venta_genero[order(Venta_genero$x,decreasing = TRUE),])
pie(ventasGenero,labels = ventasGenero,
col=rainbow(length(etiquetasG)),
main="Ventas por Genero")
legend("topright", c("Femenino", "Masculino"), cex = 0.9,
fill = rainbow(length(ventasGenero)))
mobiletablets<- usaStore%>%group_by(total)%>%filter(category %in% c("Mobiles & Tablets"))
mobiletablets
P1_mobiletablets<- usaStore%>%group_by(total)%>%filter(sku %in% c("MATSAM59DB757FB47A2"))
P1_mobiletablets
mobiletablets<- usaStore%>%group_by(total)%>%filter(category %in% c("Mobiles & Tablets"))
P_mobiletablets<-aggregate(x=mobiletablets$total,by=list(mobiletablets$sku), FUN=sum)
datatable(P_mobiletablets[order(P_mobiletablets$x,decreasing = TRUE),])
mobiletablets<- usaStore%>%group_by(total)%>%filter(category %in% c("Mobiles & Tablets"))
mobiletablets<- usaStore%>%group_by(total)%>%filter(category %in% c("Mobiles & Tablets"))
P_mobiletablets<-aggregate(x=mobiletablets$total,by=list(mobiletablets$sku), FUN=sum)
mobiletablets<- usaStore%>%group_by(total)%>%filter(category %in% c("Mobiles & Tablets"))
P_mobiletablets<-aggregate(x=mobiletablets$total,by=list(mobiletablets$sku), FUN=sum)
data_new1 <- Reduce(rbind,by(P_mobiletablets,P_mobiletablets["group"],head,n = 3))
mobiletablets <- usaStore%>%group_by(total)%>%filter(category %in% c("Mobiles & Tablets"))
P_mobiletablets <- aggregate(x=mobiletablets$total,by=list(mobiletablets$sku), FUN=sum)
P_mobiletablets <- P_mobiletablets[order(P_mobiletablets$x,decreasing = TRUE),]
data_new1 <- Reduce(rbind,by(P_mobiletablets,P_mobiletablets["group"],head,n = 3))
mobiletablets <- usaStore%>%group_by(total)%>%filter(category %in% c("Mobiles & Tablets"))
P_mobiletablets <- aggregate(x=mobiletablets$total,by=list(mobiletablets$sku), FUN=sum)
P_mobiletablets <- P_mobiletablets[order(P_mobiletablets$x,decreasing = TRUE),]
data_new1 <- Reduce(rbind,by(P_mobiletablets,P_mobiletablets$Group.1,head,n = 3))
datatable(data_new1)
datatable(P_mobiletablets)
data_new1 <- Reduce(rbind,by(P_mobiletablets,P_mobiletablets["Group.1"],head,n = 3))
datatable(data_new1)
data_new1 <- Reduce(rbind,by(P_mobiletablets,P_mobiletablets["x"],head,n = 3))
datatable(data_new1)
P_mobiletablets <- P_mobiletablets[order(P_mobiletablets$x,decreasing = TRUE),n=3]
P_mobiletablets %>% top_n(2)
P_mobiletablets
P_mobiletablets %>% top_n(3)
P_mobiletables <- P_mobiletablets %>% top_n(10)
datatable(P_mobiletables)
appliances<- usaStore%>%group_by(total)%>%filter(category %in% c("Appliances"))
appliances <- aggregate(x=appliances$total,by=list(appliances$sku), FUN=sum)
appliances <- appliances[order(appliances$x,decreasing = TRUE),]
#Obtengo el top 10
appliances <- appliances %>% top_n(10)
#Lo ingreso en una tabla
datatable(appliances)
Entertainment<- usaStore%>%group_by(total)%>%filter(category %in% c("Entertainment"))
Entertainment <- aggregate(x=Entertainment$total,by=list(Entertainment$sku), FUN=sum)
Entertainment <- Entertainment[order(Entertainment$x,decreasing = TRUE),]
#Obtengo el top 10
Entertainment <- Entertainment %>% top_n(10)
#Lo ingreso en una tabla
datatable(Entertainment)
UsaStoreCo <- select(usaStore, "cant_ordened","price","discount_amount","total","age")
UsaStoreCo
UsaStoreCo <- select(usaStore, "cant_ordened","price","discount_amount","total","age")
#UsaStoreCo
str(UsaStoreCo)
M<-cor(UsaStoreCo)
head(round(M,2))
ifelse(require(corrplot)==T, "Cargado", install.packages("corrplot"))
library(corrplot)
corrplot(M, method="circle")
usaStore <- usaStore[!(usaStore$category=""),]
usaStore <- usaStore[!(usaStore$category=""),]
usaStore <- usaStore[!(usaStore$category==""),]
unique(usaStore$category)
usaStore
#AQUI SE INCLUYEN LIS PAQUETES A INSTALAR PARA QUE FUNCIONE EL RMD
ifelse(require(MASS)==T, "Cargado", install.packages("readxl"))
ifelse(require(MASS)==T, "Cargado", install.packages("MASS"))
ifelse(require(viridis)==T, "Cargado", install.packages("viridis"))
ifelse(require(tables)==T, "Cargado", install.packages("tables"))
ifelse(require(Hmisc)==T, "Cargado", install.packages("Hmisc"))
ifelse(require(flextable)==T, "Cargado", install.packages("flextable"))
ifelse(require(dplyr)==T, "Cargado", install.packages("dplyr"))
ifelse(require(RcmdrMisc)==T, "Cargado", install.packages("RcmdrMisc"))
ifelse(require(webr)==T, "Cargado", install.packages("webr"))
ifelse(require(knitr)==T, "Cargado", install.packages("knitr"))
ifelse(require(kableExtra)==T, "Cargado", install.packages("kableExtra"))
ifelse(require(dataMaid)==T, "Cargado", install.packages("dataMaid"))
ifelse(require(tidylog)==T, "Cargado", install.packages("tidylog"))
ifelse(require(stargazer)==T, "Cargado", install.packages("stargazer"))
ifelse(require(summarytools)==T, "Cargado", install.packages("summarytools"))
ifelse(require(metan)==T, "Cargado", install.packages("metan"))
ifelse(require(DT)==T, "Cargado", install.packages("DT"))
ifelse(require(expss)==T, "Cargado", install.packages("expss"))
ifelse(require(corrplot)==T, "Cargado", install.packages("corrplot"))
#install.packages("descr")
#install.packages("summarytools")
#install.packages("rriskDistributions")
#AQUI SE INCLUYEN LAS LIBRERIAS
library(MASS)
library(viridis)
library(tables)
library(Hmisc)
library(kableExtra)
library(knitr,stargazer)
library(dataMaid,tidylog)
library(reporttools)
library(dplyr, warn.conflicts = FALSE)
library(reporttools,summarytools)
library(metan,dplyr , warn.conflicts = FALSE)
library(flextable, DT)
library(dplyr)
library(RcmdrMisc)
library(webr,expss)
library(descr)
library(summarytools)
library(fitdistrplus)
library(survival)
library(npsurv)
library(lsei)
library(readr)
library(rriskDistributions)
library(xts)
library(zoo)
library(tidyverse)
library(lubridate)
library(tseries)
library(astsa)
library(forecast)
library(foreign)
library(timsac)
library(vars)
library(mFilter)
library(dynlm)
library(MASS)
library(ggfortify)
library(readxl)
library(corrplot)
usaStore <- read.csv("D:/EAE Master Big Data/Estadistica/TrabajoFinal/sales.csv", header = TRUE, sep = ";")
str(usaStore)
usaStore
usaStore <- usaStore[!(usaStore$category==""),]
unique(usaStore$category)
ventas_categoria <- data.frame(categoria,ventas)
ventas_categoria
diagramaCat_Venta <-  aggregate(x=ventas_categoria$ventas, by=list(ventas_categoria$categoria),FUN = sum)
diagramaCat_Venta[order(diagramaCat_Venta$x,decreasing = TRUE),] %>% top_n(10)
diagramaCat_Venta[order(diagramaCat_Venta$x,decreasing = TRUE),] %>% top_n(1)
usaStore_Tablet <- usaStore %>% filter(usaStore$category=="Mobiles & Tablets")
usaStore_Tablet
summary(usaStore_Tablet)
str(usaStore_Tablet$total)
summary(usaStore_Tablet$total)
desctdist(usaStore$total, discrete = FALSE, boot=1000)
descdist(usaStore$total, discrete = FALSE, boot=1000)
descdist(usaStore$cant_ordened, discrete = FALSE, boot=1000)
ventas_usaStore_tablets <- usaStore_Tablet$total
cantidad_usaStore_tablets <- usaStore_Tablet$cant_ordened
fit_gamma  <- fitdist(ventas_usaStore_tablets, "gamma")
fit_gamma  <- fitdist(ventas_usaStore_tablets, "gamma")
summary(fit_gamma)
ventas_usaStore_tablets
fit_gamma  <- fitdist(ventas_usaStore_tablets, "gamma")
fit_gamma  <- fitdist(cantidad_usaStore_tablets, "gamma")
summary(fit_gamma)
fit_lognormal <- fitdist(cantidad_usaStore_tablets, "lnorm")
summary(fit_lognormal)
fit_weillbul <- fitdist(cantidad_usaStore_tablets, "weibull")
summary(fit_weillbul)
summary(fit_lognormal)
estimacion_cantidad <- rlnorm(360, meanlog = 1.000000e+00, sdlog = 5.121939e-12 )
summary(estimacion_cantidad)
estimacion_venta<-runif(360,min = 500,max = 2500)
summary(estimacion_venta)
estimacion_cantidad <- rlnorm(360, meanlog = 1.000000e+00, sdlog = 5.121939e-12 )
summary(estimacion_cantidad)
ventas_usaStore_tablets <- usaStore_Tablet$total
ventas_usaStore_tablets
cantidad_usaStore_tablets
descdist(cantidad_usaStore_tablets, discrete = TRUE, boot=1000)
descdist(ventas_usaStore_tablets, discrete = FALSE, boot=1000)
fit_gamma  <- fitdist(ventas_usaStore_tablets, "gamma")
ventas_usaStore_tablets
unique(ventas_usaStore_tablets)
summary(ventas_usaStore_tablets)
fit_gamma  <- fitdist(ventas_usaStore_tablets, "beta")
fit_gamma  <- fitdist(ventas_usaStore_tablets, "lnorm")
fit_gamma  <- fitdist(usaStore_Tablet$total,"lnorm")
summary(usaStore_Tablet$total)
descdist(cantidad_usaStore_tablets, discrete = TRUE, boot=1000)
descdist(cantidad_usaStore_tablets, boot=1000)
mean(estimacion_cantidad)-sd(estimacion_cantidad)
descdist(cantidad_usaStore_tablets,discrete = TRUE, boot=1000)
fit_poisson  <- fitdist(cantidad_usaStore_tablets, "pois")
summary(fit_poisson)
descdist(cantidad_usaStore_tablets,discrete = TRUE, boot=1000)
fir_nbinom <- fitdist(cantidad_usaStore_tablets, "nbinom")
summary(fir_nbinom)
descdist(cantidad_usaStore_tablets,discrete = TRUE, boot=1000)
fit_norm <- fitdist(cantidad_usaStore_tablets, "norm")
summary(fit_norm)
fit_poisson  <- fitdist(cantidad_usaStore_tablets, "pois")
summary(fit_poisson)
fit_nbinom <- fitdist(cantidad_usaStore_tablets, "nbinom")
summary(fir_nbinom)
descdist(cantidad_usaStore_tablets,discrete = TRUE, boot=100000)
descdist(cantidad_usaStore_tablets,discrete = TRUE, boot=10000)
summary(fit_poisson)
estimacion_cantidad <- rpois(360, 10)
summary(estimacion_cantidad)
cantidad_usaStore_tablets
unique(cantidad_usaStore_tablets)
fit_nbinom <- fitdist(cantidad_usaStore_tablets, "nbinom")
summary(fir_nbinom)
estimacion_cantidad <- rbinom(360, size =1.00000e+00 ,prob = 2.12387e-07)
summary(estimacion_cantidad)
estimacion_cantidad <- rlnorm(360, meanlog = 1.000000e+00, sdlog = 5.121939e-12 )
summary(estimacion_cantidad)
mean(estimacion_cantidad)-sd(estimacion_cantidad)
mean(estimacion_venta)+sd(estimacion_venta)
mean(estimacion_cantidad)-sd(estimacion_cantidad)
usaStore <- usaStore[!(usaStore$payment_method==""),]
unique(usaStore$payment_method)
tipoPago<-aggregate(x=usaStore$total,by=list(usaStore$payment_method), FUN=sum)
datatable(tipoPago[order(tipoPago$x,decreasing = TRUE),])
usaStore
easypay_usaSales <- usaStore %>% filter(usaStore$payment_method=="easypay")
easypay_usaSales
easypay_usaSales <- usaStore %>% filter(usaStore$payment_method=="Easypay")
easypay_usaSales
summary(easypay_usaSales$total)
easypay_usaSales <- usaStore %>% filter(easypay_usaSales$total!=0.0)
easypay_usaSales <- usaStore %>% filter(easypay_usaSales$total!=0)
unique(easypay_usaSales$total)
easypay_usaSales <- replace(easypay_usaSales$total, easypay_usaSales$total==0, 1 )
summary(easypay_usaSales)
descdist(easypay_usaSales$total, boot=1000)
easypay_usaSales
descdist(easypay_usaSales, boot=1000)
fit_gamma  <- fitdist(easypay_usaSales, "gamma")
fit_lognormal <- fitdist(easypay_usaSales, "lnorm")
summary(fit_lognormal)
easypay_usaSales
easypay_usaSales <- na.omit(easypay_usaSales)
easypay_usaSales
a <- 0.2
a
round(a)
replace(a, a==0, 1)
replace(a, a==0, "1")
replace(a, a==0, 1.0)
a <- 0.2
round(a)
replace(a, a==0, 1.0)
a <- replace(a, a==0, 1.0)
a
help(round)
round(a, 1)
a <- 0.2
round(a, 1)
a <- 0.2
a
a <- round(a, 1)
a
a <- 0.2
a <- round(a, 3)
a
a
a
a <- round(a, 3)
a
a <- 0.2
a <- function(a) ifelse(a<1,1,a)
a
new.function <- function(a) ifelse(a<1,1,a)
a <- 0.2
new.function <- function(a) ifelse(a<1,1,a)
new.function(a)
a <- c(0.2,2)
new.function <- function(a) ifelse(a<1,1,a)
new.function(a)
aesypay_usaSales <- new.function(easypay_usaSales)
easypay_usaSales <- new.function(easypay_usaSales)
summary(easypay_usaSales)
fit_gamma  <- fitdist(easypay_usaSales, "gamma")
fit_gamma  <- fitdist(easypay_usaSales/10000, "gamma")
summary(fit_gamma)
fit_gamma  <- fitdist(easypay_usaSales/1000, "gamma")
summary(fit_gamma)
fit_lognormal <- fitdist(easypay_usaSales, "lnorm")
summary(fit_lognormal)
fit_weillbul <- fitdist(easypay_usaSales, "weibull")
summary(fit_weillbul)
fit_lognormal <- fitdist(easypay_usaSales/1000, "lnorm")
summary(fit_lognormal)
descdist(easypay_usaSales, boot=1000)
estimacion_total <- rlnorm(360, meanlog = 1.000000e+00, sdlog = -9.250091e-11 )
summary(estimacion_total)
knitr::opts_chunk$set(echo = TRUE)
#AQUI SE INCLUYEN LIS PAQUETES A INSTALAR PARA QUE FUNCIONE EL RMD
ifelse(require(MASS)==T, "Cargado", install.packages("readxl"))
ifelse(require(MASS)==T, "Cargado", install.packages("MASS"))
ifelse(require(viridis)==T, "Cargado", install.packages("viridis"))
ifelse(require(tables)==T, "Cargado", install.packages("tables"))
ifelse(require(Hmisc)==T, "Cargado", install.packages("Hmisc"))
ifelse(require(flextable)==T, "Cargado", install.packages("flextable"))
ifelse(require(dplyr)==T, "Cargado", install.packages("dplyr"))
ifelse(require(RcmdrMisc)==T, "Cargado", install.packages("RcmdrMisc"))
ifelse(require(webr)==T, "Cargado", install.packages("webr"))
ifelse(require(knitr)==T, "Cargado", install.packages("knitr"))
ifelse(require(kableExtra)==T, "Cargado", install.packages("kableExtra"))
ifelse(require(dataMaid)==T, "Cargado", install.packages("dataMaid"))
ifelse(require(tidylog)==T, "Cargado", install.packages("tidylog"))
ifelse(require(stargazer)==T, "Cargado", install.packages("stargazer"))
ifelse(require(summarytools)==T, "Cargado", install.packages("summarytools"))
ifelse(require(metan)==T, "Cargado", install.packages("metan"))
ifelse(require(DT)==T, "Cargado", install.packages("DT"))
ifelse(require(expss)==T, "Cargado", install.packages("expss"))
ifelse(require(corrplot)==T, "Cargado", install.packages("corrplot"))
#install.packages("descr")
#install.packages("summarytools")
#install.packages("rriskDistributions")
#AQUI SE INCLUYEN LAS LIBRERIAS
library(MASS)
library(viridis)
library(tables)
library(Hmisc)
library(kableExtra)
library(knitr,stargazer)
library(dataMaid,tidylog)
library(reporttools)
library(dplyr, warn.conflicts = FALSE)
library(reporttools,summarytools)
library(metan,dplyr , warn.conflicts = FALSE)
library(flextable, DT)
library(dplyr)
library(RcmdrMisc)
library(webr,expss)
library(descr)
library(summarytools)
library(fitdistrplus)
library(survival)
library(npsurv)
library(lsei)
library(readr)
library(rriskDistributions)
library(xts)
library(zoo)
library(tidyverse)
library(lubridate)
library(tseries)
library(astsa)
library(forecast)
library(foreign)
library(timsac)
library(vars)
library(mFilter)
library(dynlm)
library(MASS)
library(ggfortify)
library(readxl)
library(corrplot)
usaStore <- read.csv("D:/EAE Master Big Data/Estadistica/TrabajoFinal/sales.csv", header = TRUE, sep = ";")
str(usaStore)
summary(usaStore)
summary(usaStore$order_id)
usaStore$order_id <- is.integer(usaStore$order_id)
summary(usaStore$order_id)
usaStore <- read.csv("D:/EAE Master Big Data/Estadistica/TrabajoFinal/sales.csv", header = TRUE, sep = ";")
str(usaStore)
summary(usaStore$order_id)
usaStore$order_id <- as.integer(usaStore$order_id)
summary(usaStore$order_id)
usaStore <- usaStore[!is.na(usaStore$order_id),]
summary(usaStore$order_id)
summary(usaStore$order_id)
summary(usaStore$order_date)
usaStore$order_date %>%  top_n(1)
usaStore$order_date
ejemplo1 <- "8/10/2020"
usaStore$order_date <- as.POSIXct(ejemplo1,tz= Sys.timezone())
usaStore$order_date
usaStore <- read.csv("D:/EAE Master Big Data/Estadistica/TrabajoFinal/sales.csv", header = TRUE, sep = ";")
str(usaStore)
usaStore$order_date<-as.Date(usaStore$order_date, "%d/%m/%Y")
summary(usaStore)
summary(usaStore$order_id)
usaStore$order_id <- as.integer(usaStore$order_id)
usaStore$order_date<-as.Date(usaStore$order_date, "%d/%m/%Y")
usaStore <- usaStore[!is.na(usaStore$order_id),]
summary(usaStore$order_date)
usaStore <- usaStore[!is.na(usaStore$order_date),]
usaStore$order_date %>% filter(usaStore$order_date == "")
summary(usaStore)
summary(usaStore$status)
usaStore <- usaStore[!is.na(usaStore$status),]
usaStore
usaStore
summary(usaStore)
usaStore[usaStore$status == "",]
usaStore[usaStore$status == "",]
usaStore <- read.csv("D:/EAE Master Big Data/Estadistica/TrabajoFinal/sales.csv", header = TRUE, sep = ";")
str(usaStore)
summary(usaStore)
summary(usaStore$item_id)
str(usaStore$item_id)
str(usaStore$item_id)
max(usaStore$item_id)
min(usaStore$item_id)
min(usaStore$sku)
(usaStore$sku)
summary(usaStore$sku)
usaStore[usaStore$sku=="",]
min(usaStore$sku)
usaStore[usaStore$sku=="jjp_15000006-100-NIL",]
usaStore[usaStore$sku==" jjp_15000006-100-NIL",]
usaStore[usaStore$sku=="",]
usaStore[usaStore$sku==" ",]
count(usaStore[usaStore$sku==" ",])
usaStore$cant_ordened
summary(usaStore$cant_ordened)
summary(usaStore$price)
usaStore$price <-  function(x) ifelse(usaStore$price<1,1,usaStore$price)
usaStore$price <- funcion_redondeo_uno(usaStore$price)
funcion_redondeo_uno <-  function(valor) ifelse(valor<1,1,valor)
usaStore$price <- funcion_redondeo_uno(usaStore$price)
summary(usaStore$price)
summary(usaStore$value)
usaStore$value <- funcion_redondeo_uno(usaStore$value)
summary(usaStore$value)
summary(usaStore$discount_amount)
summary(usaStore$total)
usaStore$total <- funcion_redondeo_uno(usaStore$total)
summary(usaStore$total)
summary(usaStore$cust_id)
summary(usaStore$year)
summary(usaStore$month)
summary(usaStore$month)
L01 < - "D:/EAE Master Big Data/Estadistica/TrabajoFinal"
L01 < - "D:\EAE Master Big Data\Estadistica\TrabajoFinal"
L01 < - "D:/EAE Master Big Data/Estadistica/TrabajoFinal/"
L01 <- "D:/EAE Master Big Data/Estadistica/TrabajoFinal/"
usaStore <- read.csv(paste(L01,"sales.csv",sep=""), header = TRUE, sep = ";")
#funcion limpiar
funcion_redondeo_uno <-  function(valor) ifelse(valor<1,1,valor) # Metodo para realizar el redondeo
summary(usaStore)
#Funciones para
# Para order_id convertir a enteros
usaStore$order_id <- as.integer(usaStore$order_id)
# Para order_date Convertir a fecha
usaStore$order_date<-as.Date(usaStore$order_date, "%d/%m/%Y")
#Para convertir convertir precio 0.0 a 1
usaStore$price <- funcion_redondeo_uno(usaStore$price)
#Convertir value de 0.0 a 1
usaStore$value <- funcion_redondeo_uno(usaStore$value)
#Importante mencionar que la variable discount_amount no se le quitará el 0 porque es permisible
#Convertir value de 0.0 a 1
usaStore$total <- funcion_redondeo_uno(usaStore$total)
# Limpiar los NA's
usaStore <- usaStore[!is.na(usaStore$order_id),]
usaStore <- usaStore[!is.na(usaStore$order_date),]
usaStore <- usaStore[!is.na(usaStore$status),]
usaStore <- usaStore[!is.na(usaStore$sku),]
usaStore <- usaStore[!is.na(usaStore$cant_ordened),]
usaStore <- usaStore[!is.na(usaStore$total),]
#Para guardar la data limpia
write.csv(cvd, paste(Destino,"sales.csv",sep = ""))
#Para guardar la data limpia
write.csv(usaStore, paste(Destino,"sales.csv",sep = ""))
Destino <- "D:/EAE Master Big Data/Estadistica/TrabajoFinal/csvlimpio/"
#Para guardar la data limpia
write.csv(usaStore, paste(Destino,"sales.csv",sep = ""))
